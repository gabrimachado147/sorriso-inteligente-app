# yaml-language-server: $schema=https://json.schemastore.org/github-workflow
name: Deploy to Staging
concurrency:
  group: deploy-staging-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read       # s√≥ leitura de c√≥digo
  pull-requests: write # para comentar no PR

env:
  VITE_API_BASE_URL:    ${{ secrets.STAGING_API_BASE_URL }}
  VITE_N8N_WEBHOOK_URL: ${{ secrets.STAGING_N8N_WEBHOOK_URL }}
  VITE_EVOLUTION_API_URL: ${{ secrets.STAGING_EVOLUTION_API_URL }}
  VITE_SUPABASE_URL:    ${{ secrets.STAGING_SUPABASE_URL }}
  VITE_SUPABASE_ANON_KEY: ${{ secrets.STAGING_SUPABASE_ANON_KEY }}
  VITE_ENVIRONMENT:     staging

on:
  push:
    branches:
      - staging
  pull_request:
    branches:
      - staging

jobs:
  test:
    name: üß™ Run Tests & Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

      - name: Build project for staging
        run: npm run build:staging

  deploy:
    name: üöÄ Deploy to Staging
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/staging'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project for staging
        run: npm run build:staging

      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.12.x
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: Deploy to Staging Server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USERNAME }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          script: |
            cd /var/www/staging-sorriso-inteligente
            git pull origin staging
            npm ci
            npm run build:staging
            sudo systemctl reload nginx

      - name: Notify deployment status
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ job.status }}
          channel: '#deployments'

  lighthouse:
    name: üîç Lighthouse Audit
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/staging'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Wait for deployment
        run: sleep 30

      - name: Run Lighthouse
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://staging.sorrisointeligente.com
          uploadArtifacts: true
          temporaryPublicStorage: true
