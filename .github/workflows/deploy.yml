
name: Deploy to Production
concurrency:
  group: deploy-production-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  deployments: write

env:
  VITE_API_BASE_URL: ${{ secrets.PRODUCTION_API_BASE_URL }}
  VITE_N8N_WEBHOOK_URL: ${{ secrets.PRODUCTION_N8N_WEBHOOK_URL }}
  VITE_EVOLUTION_API_URL: ${{ secrets.PRODUCTION_EVOLUTION_API_URL }}
  VITE_SUPABASE_URL: ${{ secrets.PRODUCTION_SUPABASE_URL }}
  VITE_SUPABASE_ANON_KEY: ${{ secrets.PRODUCTION_SUPABASE_ANON_KEY }}
  VITE_ENVIRONMENT: production

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    name: ðŸ§ª Test & Build Verification
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Clear npm cache
        run: npm cache clean --force

      - name: Install dependencies with optional packages
        run: npm ci --include=optional

      - name: Type check
        run: npm run type-check

      - name: Build project for production
        run: npm run build
        env:
          NODE_ENV: production
          VITE_API_BASE_URL: ${{ secrets.PRODUCTION_API_BASE_URL }}
          VITE_N8N_WEBHOOK_URL: ${{ secrets.PRODUCTION_N8N_WEBHOOK_URL }}
          VITE_EVOLUTION_API_URL: ${{ secrets.PRODUCTION_EVOLUTION_API_URL }}
          VITE_SUPABASE_URL: ${{ secrets.PRODUCTION_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.PRODUCTION_SUPABASE_ANON_KEY }}
          VITE_ENVIRONMENT: production

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: production-build
          path: dist/
          retention-days: 7

  deploy:
    name: ðŸš€ Deploy to Vercel
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Deploy to Vercel
        run: vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Deployment Success
        run: echo "âœ… Production deployment completed successfully!"
